[{"/Users/elijaholasunkanmi/Desktop/437/src/index.js":"1","/Users/elijaholasunkanmi/Desktop/437/src/App.jsx":"2"},{"size":727,"mtime":1644866699705,"results":"3","hashOfConfig":"4"},{"size":914,"mtime":1644866699705,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"lz8ijp",{"filePath":"8","messages":"9","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"/Users/elijaholasunkanmi/Desktop/437/src/index.js",[],"/Users/elijaholasunkanmi/Desktop/437/src/App.jsx",["11","12","13","14","15"],"\nimport { useEffect, useMemo, useState } from \"react\";\n\n// import thirdweb\nimport { useWeb3 } from \"@3rdweb/hooks\";\n\nconst App = () => {\n  // Use the connectWallet hook thirdweb gives us.\n  const { connectWallet, address, error, provider } = useWeb3();\n  console.log(\"ðŸ‘‹ Address:\", address)\n\n  // This is the case where the user hasn't connected their wallet\n  // to your web app. Let them call connectWallet.\n  if (!address) {\n    return (\n      <div className=\"landing\">\n        <h1>Welcome to Super Cool DAO</h1>\n        <button onClick={() => connectWallet(\"injected\")} className=\"btn-hero\">\n          Connect your wallet\n        </button>\n      </div>\n    );\n  }\n  \n  // This is the case where we have the user's address\n  // which means they've connected their wallet to our site!\n  return (\n    <div className=\"landing\">\n      <h1>ðŸ‘€ wallet connected, now what!</h1>\n    </div>);\n};\n\nexport default App;",{"ruleId":"16","severity":1,"message":"17","line":2,"column":10,"nodeType":"18","messageId":"19","endLine":2,"endColumn":19},{"ruleId":"16","severity":1,"message":"20","line":2,"column":21,"nodeType":"18","messageId":"19","endLine":2,"endColumn":28},{"ruleId":"16","severity":1,"message":"21","line":2,"column":30,"nodeType":"18","messageId":"19","endLine":2,"endColumn":38},{"ruleId":"16","severity":1,"message":"22","line":9,"column":35,"nodeType":"18","messageId":"19","endLine":9,"endColumn":40},{"ruleId":"16","severity":1,"message":"23","line":9,"column":42,"nodeType":"18","messageId":"19","endLine":9,"endColumn":50},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useMemo' is defined but never used.","'useState' is defined but never used.","'error' is assigned a value but never used.","'provider' is assigned a value but never used."]